<Window x:Class="CrmCodeGenerator.VSPackage.Dialogs.Filter"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
        xmlns:converters="clr-namespace:CrmCodeGenerator.VSPackage.Dialogs.Converters"
        xmlns:t="clr-namespace:CrmCodeGenerator.VSPackage.Dialogs"
        Title="{Binding WindowTitle}" Width="1024" Height="670" Loaded="Window_Loaded" WindowStartupLocation="CenterOwner"
            ResizeMode="CanResizeWithGrip" ShowInTaskbar="False" ScrollViewer.VerticalScrollBarVisibility="Disabled">

    <Window.Resources>
        <Style TargetType="Label">
            <Setter Property="Margin" Value="-4,0,0,-4" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="20" />
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="20" />
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="FontSize" Value="9" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>
        <converters:BoolToVisibilityConverter x:Key="BoolToHiddenConverter" TrueValue="Visible" FalseValue="Collapsed"/>
        <Style TargetType="{x:Type DataGridCell}">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown" />
            <EventSetter Event="MouseEnter" Handler="DataGridCell_MouseOver" />
            <EventSetter Event="MouseLeave" Handler="DataGridCell_MouseOver" />
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridRow_PreviewMouseLeftButtonDown" />
            <EventSetter Event="PreviewMouseDoubleClick" Handler="DataGridRow_PreviewMouseDoubleClick" />
            <Style.Triggers>
                <Trigger Property="t:Extensions.Bang" Value="True">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
                <Trigger Property="t:Extensions.Bang" Value="False">
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="BorderThickness" Value="0" />
                </Trigger>
                <Trigger Property="DataGridRow.IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Blue" />
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
                <Trigger Property="DataGridRow.IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#f2f2f2" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="Close" Executed="Logon_Click" />
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="Close" />
    </Window.InputBindings>

    <xctk:BusyIndicator x:Name="BusyIndicator">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MaxWidth="50"/>
                    <ColumnDefinition MaxWidth="60"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MaxWidth="50"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Padding="5,5,3,0" FontWeight="Bold" Content="Prefix:"></Label>
                <TextBox x:Name="TextBoxPrefix" Grid.Column="1" Margin="2,0,0,0" Text="{Binding Prefix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Button x:Name="ButtonNewFilter" Grid.Column="2" Margin="2,2,0,2" Content="New" Click="ButtonNewFilter_Click" />
                <Button x:Name="ButtonDuplicateFilter" Grid.Column="3" Margin="2,2,0,2" Content="Duplicate" Click="ButtonDuplicateFilter_Click" />
                <ComboBox x:Name="ComboBoxFilters" Grid.Column="4" Margin="2,2,0,2"
					    ItemsSource="{Binding EntityProfilesHeaders, Mode=OneWay}"
					    SelectedIndex="{Binding SelectedFilterIndex, Mode=TwoWay}"
					    SelectionChanged="ComboBoxFilters_SelectionChanged" />
                <Button x:Name="ButtonDeleteFilter" Grid.Column="5" Margin="2,2,0,2" Content="Delete" Click="ButtonDeleteFilter_Click" />
                <Label Grid.Column="6" Padding="7,5,3,0" FontWeight="Bold" Content="Suffix:"></Label>
                <TextBox x:Name="TextBoxSuffix" Grid.Column="7" Margin="2,0,1,0" Text="{Binding Suffix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
            <Grid Grid.Row="1"  Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MaxWidth="50"/>
                    <ColumnDefinition MaxWidth="50"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="TextBoxFilter" Margin="5,0,0,0" Grid.Column="1"
                         KeyDown="TextBoxFilter_OnKeyDown"
                         Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Button x:Name="ButtonFilter" Grid.Column="2" Margin="2,2,0,2" Content="Filter" Click="ButtonFilter_Click" />
                <Button x:Name="ButtonFilterClear" Grid.Column="3" Margin="2,2,0,2" Content="Clear" Click="ButtonFilterClear_Click" />
            </Grid>
            <Grid Grid.Row="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Content="Entities" FontWeight="Bold"></Label>
                    <DataGrid x:Name="EntitiesGrid" Grid.Row="1" AutoGenerateColumns="False" SelectionMode="Extended"
                              CanUserAddRows="False" ScrollViewer.CanContentScroll="True"
                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                              ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          CanUserDeleteRows="False"
                              KeyUp="Grid_KeyUp">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.Header>
                                    <CheckBox x:Name="CheckBoxEntitiesSelectAll" IsChecked="{Binding EntitiesSelectAll}"
                                              HorizontalAlignment="Stretch" />
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay}" Click="CheckBoxIsSelected_OnClick"
                                              HorizontalAlignment="Stretch" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding Path=Name}" Header="Logical Name" IsReadOnly="True" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Path=DisplayName}" Header="Display Name" IsReadOnly="True" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Path=Rename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="New Name" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Path=Annotations, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Annotations" Width="0.75*"/>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.Header>
                                    <CheckBox x:Name="CheckBoxMetadataSelectAll"
                                              VerticalContentAlignment="Center"
                                              Content="Generate&#x0a;Metadata"
                                              IsChecked="{Binding MetadataSelectAll}"
                                              HorizontalAlignment="Stretch"></CheckBox>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox x:Name="GenerateMeta" IsChecked="{Binding Path=IsGenerateMeta, Mode=TwoWay}" Click="CheckBoxIsSelected_OnClick"
                                              HorizontalAlignment="Stretch" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.Header>
                                    <CheckBox x:Name="CheckBoxOptionsetLabelsSelectAll"
                                              VerticalContentAlignment="Center"
                                              Content="Optionset&#x0a;Labels"
                                              IsChecked="{Binding IsOptionsetLabelsSelectAll}"
                                              HorizontalAlignment="Stretch"></CheckBox>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox x:Name="IsOptionsetLabels" IsChecked="{Binding Path=IsOptionsetLabels, Mode=TwoWay}"
                                                  Click="CheckBoxIsSelected_OnClick"
                                              HorizontalAlignment="Stretch" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.Header>
                                    <CheckBox x:Name="CheckBoxLookupLabelsSelectAll"
                                              IsChecked="{Binding IsLookupLabelsSelectAll}"
                                              Content="Lookup&#x0a;Labels"
                                              VerticalContentAlignment="Center"
                                              HorizontalAlignment="Stretch">
                                    </CheckBox>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox x:Name="IsLookupLabels" IsChecked="{Binding Path=IsLookupLabels, Mode=TwoWay}"
                                                  Click="CheckBoxIsSelected_OnClick"
                                              HorizontalAlignment="Stretch" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.Header>
                                    <StackPanel Orientation="Vertical">
                                        <Label Content="Clear Mode" Height="15" Margin="0,-2,0,2" Padding="0"></Label>
                                        <ComboBox x:Name="ComboBoxClearModeAll" Height="16" FontSize="9"
                                            SelectedItem="{Binding ValueClearModeAll, UpdateSourceTrigger=PropertyChanged}"
                                                  ItemsSource="{Binding ValueClearModes, UpdateSourceTrigger=PropertyChanged}"
                                                  VerticalAlignment="Stretch" VerticalContentAlignment="Top" />
                                    </StackPanel>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox x:Name="ComboBoxClearMode" Height="16" FontSize="9"
                                            SelectedItem="{Binding ValueClearMode, UpdateSourceTrigger=PropertyChanged}"
                                                  ItemsSource="{Binding Path=ValueClearModes}"
                                                  VerticalAlignment="Stretch" VerticalContentAlignment="Top" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Grid>
            <Button x:Name="ButtonCancel" Content="Cancel" Grid.Row="3" Width="55" Height="24" HorizontalAlignment="Left"
                    BorderThickness="1" Margin="3,0,0,0" Padding="7,0,7,0" Click="Cancel_Click" />
            <Button x:Name="GenerateCodeButton" Content="OK" Grid.Row="3" Width="80" Height="24" HorizontalAlignment="Right"
                    BorderThickness="1" Margin="0,0,15,0" Click="Logon_Click" />
        </Grid>
    </xctk:BusyIndicator>
</Window>
