<Window x:Class="CrmCodeGenerator.VSPackage.Dialogs.FilterDetails"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:control="clr-namespace:CrmCodeGenerator.Controls;assembly=CrmCodeGenerator.Controls"
        xmlns:converter="clr-namespace:CrmCodeGenerator.VSPackage.Dialogs.Converters"
        xmlns:t="clr-namespace:CrmCodeGenerator.VSPackage.Dialogs"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
        Title="{Binding WindowTitle}" Width="1360" Height="670" Loaded="Window_Loaded" WindowStartupLocation="CenterOwner"
            ResizeMode="CanResizeWithGrip" ShowInTaskbar="False" ScrollViewer.VerticalScrollBarVisibility="Disabled">

    <Window.Resources>
        <Style TargetType="Label">
            <Setter Property="Margin" Value="-4,0,0,-4" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="20" />
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="20" />
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="FontSize" Value="9" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>
        <converter:BoolToVisibilityConverter x:Key="BoolToHiddenConverter" TrueValue="Visible" FalseValue="Collapsed"/>
        <Style TargetType="{x:Type DataGridCell}">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown" />
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridRow_PreviewMouseLeftButtonDown" />
            <Style.Triggers>
                <Trigger Property="t:Extensions.Bang" Value="True">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
                <Trigger Property="t:Extensions.Bang" Value="False">
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="BorderThickness" Value="0" />
                </Trigger>
                <Trigger Property="DataGridRow.IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Blue" />
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="Close" Executed="Cancel_Click" />
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="Close" />
    </Window.InputBindings>

    <xctk:BusyIndicator x:Name="BusyIndicator">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="1.2*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Content="Attributes" FontWeight="Bold"></Label>
                <DataGrid x:Name="FieldsGrid" Grid.Row="1" AutoGenerateColumns="False" SelectionMode="Extended"
                                CanUserAddRows="False" ScrollViewer.CanContentScroll="True"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                ScrollViewer.HorizontalScrollBarVisibility="Hidden" Margin="0,0,5,0"
                          CanUserDeleteRows="False" KeyUp="Grid_KeyUp">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="CheckBoxFieldsSelectAll" IsChecked="{Binding FieldsSelectAll}"
                                                HorizontalAlignment="Stretch" />
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay}" Click="CheckBoxIsSelected_OnClick"
                                                HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Binding="{Binding Path=Name}" Header="Logical Name" IsReadOnly="True" Width="2*"/>
                        <DataGridTextColumn Binding="{Binding Path=DisplayName}" Header="Display Name" IsReadOnly="True" Width="2*"/>
                        <DataGridTextColumn Binding="{Binding Path=Rename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="New Name" Width="2*"/>
                        <DataGridTextColumn Binding="{Binding Path=Language, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Language" Width="*"/>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="CheckBoxReadOnlySelectAll"
                                              VerticalContentAlignment="Center"
                                              Content="Read&#x0a;Only"
                                              IsChecked="{Binding ReadOnlySelectAll}"
                                              HorizontalAlignment="Stretch"></CheckBox>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox x:Name="ReadOnly" IsChecked="{Binding Path=IsReadOnly, Mode=TwoWay}"
                                              IsEnabled="{Binding Path=IsReadOnlyEnabled}"
                                              Click="CheckBoxIsSelected_OnClick"
                                              HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="CheckBoxClearFlagSelectAll"
                                              VerticalContentAlignment="Center"
                                              Content="Clear&#x0a;Flag"
                                              IsChecked="{Binding ClearFlagSelectAll}"
                                              HorizontalAlignment="Stretch"></CheckBox>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox x:Name="ClearFlag" IsChecked="{Binding Path=IsClearFlag, Mode=TwoWay}"
                                              IsEnabled="{Binding Path=IsClearFlagEnabled}"
                                              Click="CheckBoxIsSelected_OnClick"
                                              HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Content="One to Many Relations" FontWeight="Bold"></Label>
                <DataGrid x:Name="Relations1NGrid" Grid.Row="1" AutoGenerateColumns="False" SelectionMode="Extended"
                                CanUserAddRows="False" ScrollViewer.CanContentScroll="True"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          CanUserDeleteRows="False" KeyUp="Grid_KeyUp">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="CheckBoxRelations1NSelectAll" IsChecked="{Binding Relations1NSelectAll}"
                                                HorizontalAlignment="Stretch" />
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay}" Click="CheckBoxIsSelected_OnClick"
                                                HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Binding="{Binding Path=Name}" Header="Schema Name" IsReadOnly="True" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Path=ToEntity}" Header="To Entity" IsReadOnly="True" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Path=ToField}" Header="To Field" IsReadOnly="True" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Path=Rename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="New Name" Width="*"/>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="CheckBox1ToNReadOnlyAll"
                                          Content="Read&#x0a;Only"
                                          IsChecked="{Binding Relations1NReadOnlyAll}"
                                                HorizontalAlignment="Stretch"></CheckBox>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox x:Name="ReadOnly" IsChecked="{Binding Path=IsReadOnly, Mode=TwoWay}" Click="CheckBoxIsSelected_OnClick"
                                                HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <Label Content="Many to One Relations" Grid.Row="2" FontWeight="Bold"></Label>
                <DataGrid x:Name="RelationsN1Grid" Grid.Row="3" AutoGenerateColumns="False" SelectionMode="Extended"
                                CanUserAddRows="False" ScrollViewer.CanContentScroll="True"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          CanUserDeleteRows="False" KeyUp="Grid_KeyUp">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="CheckBoxRelationsN1SelectAll" IsChecked="{Binding RelationsN1SelectAll}"
                                                HorizontalAlignment="Stretch" />
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay}" Click="CheckBoxIsSelected_OnClick"
                                                HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Binding="{Binding Path=Name}" Header="Schema Name" IsReadOnly="True" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Path=ToEntity}" Header="To Entity" IsReadOnly="True" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Path=FromField}" Header="From Field" IsReadOnly="True" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Path=Rename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="New Name" Width="*"/>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="CheckBoxNToOneFlattenAll" IsChecked="{Binding RelationsN1FlattenAll}"
                                                HorizontalAlignment="Stretch">Flat</CheckBox>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox x:Name="Flatten" IsChecked="{Binding Path=IsFlatten, Mode=TwoWay}" Click="CheckBoxIsSelected_OnClick"
                                                HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="CheckBoxNToOneReadOnlyAll"
                                          Content="Read&#x0a;Only"
                                          IsChecked="{Binding RelationsN1ReadOnlyAll}"
                                                HorizontalAlignment="Stretch"></CheckBox>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox x:Name="ReadOnly" IsChecked="{Binding Path=IsReadOnly, Mode=TwoWay}" Click="CheckBoxIsSelected_OnClick"
                                                HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <Label Content="Many to Many Relations" Grid.Row="4" FontWeight="Bold"></Label>
                <DataGrid x:Name="RelationsNNGrid" Grid.Row="5" AutoGenerateColumns="False" SelectionMode="Extended"
                                CanUserAddRows="False" ScrollViewer.CanContentScroll="True"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          CanUserDeleteRows="False" KeyUp="Grid_KeyUp">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="CheckBoxRelationsNNSelectAll" IsChecked="{Binding RelationsNNSelectAll}"
                                                HorizontalAlignment="Stretch" />
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay}" Click="CheckBoxIsSelected_OnClick"
                                                HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Binding="{Binding Path=Name}" Header="Schema Name" IsReadOnly="True" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Path=IntersectEntity}" Header="Intersecting Entity" IsReadOnly="True" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Path=ToEntity}" Header="To Entity" IsReadOnly="True" Width="*"/>
                        <DataGridTextColumn Binding="{Binding Path=Rename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="New Name" Width="*"/>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="CheckBoxNToNReadOnlyAll"
                                          Content="Read&#x0a;Only"
                                          IsChecked="{Binding RelationsNNReadOnlyAll}"
                                                HorizontalAlignment="Stretch"></CheckBox>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox x:Name="ReadOnly" IsChecked="{Binding Path=IsReadOnly, Mode=TwoWay}" Click="CheckBoxIsSelected_OnClick"
                                                HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Grid Height="24" Grid.ColumnSpan="2" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="ButtonSelectAll" Content="Select All" BorderThickness="1" Margin="0,0,3,0" Padding="7,0,7,0" Click="ButtonSelectAll_Click" />
                <Button x:Name="ButtonDeselectAll" Content="Deselect All" BorderThickness="1" Margin="3,0,3,0" Padding="7,0,7,0" Grid.Column="1" Click="ButtonDeselectAll_Click" />
                <Button x:Name="ButtonClearNames" Content="Clear Renames" BorderThickness="1" Margin="3,0,0,0" Padding="7,0,7,0" Grid.Column="2" Click="ButtonClearNames_Click" />
                <!--<StackPanel x:Name="PanelEnglishLabelField"  Grid.Column="4" Orientation="Horizontal"
                                        Visibility="{Binding IsEnglishLabelEnabled, Converter={StaticResource BoolToHiddenConverter}}" >
                    <Label Padding="7,4,3,0" FontWeight="Bold" Content="English Label Field:"></Label>
                    <TextBox x:Name="TextBoxEnglishLabelField" Margin="2,0,1,0" Text="{Binding EnglishLabelField, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200"/>
                </StackPanel>-->
                <Button x:Name="ButtonCancel" Content="Cancel" Width="55" BorderThickness="1" Margin="3,0,0,0" Padding="7,0,7,0" Grid.Column="6" Click="Cancel_Click" />
                <Button x:Name="ButtonOk" Content="OK" Width="80" BorderThickness="1" Margin="3,0,15,0" Padding="7,0,7,0" Grid.Column="7" Click="Logon_Click" />
            </Grid>
        </Grid>
    </xctk:BusyIndicator>
</Window>
